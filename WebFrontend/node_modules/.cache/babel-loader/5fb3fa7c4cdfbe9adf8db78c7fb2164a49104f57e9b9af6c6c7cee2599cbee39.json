{"ast":null,"code":"/* eslint-disable*/\nimport axios from 'axios';\nimport Cookies from 'js-cookie';\nimport { useRouter, useRoute } from 'vue-router';\nconst router = useRouter();\nconst route = useRoute();\nasync function getAccountInfo() {\n  if (Cookies.get('session_cookie') == null) {\n    console.log(\"No account found\");\n    return \"No account found\";\n  }\n  let response = await axios.post(\"http://localhost:7000/api/getAccountInfo\", {\n    session_cookie: Cookies.get('session_cookie')\n  }).catch(error => {\n    console.error('Error getting info :', error);\n    alert(\"Backend server unavailable\");\n  });\n  return response.data['name'];\n}\nasync function getSequences() {\n  if (Cookies.get('session_cookie') == null) {\n    console.log(\"No account found\");\n    return \"No account found\";\n  }\n  let response = await axios.post(\"http://localhost:7000/api/getSequences\", {\n    session_cookie: Cookies.get('session_cookie')\n  }).catch(error => {\n    console.error('Error getting info :', error);\n    alert(\"Backend server unavailable\");\n    return '';\n  });\n  return response.data['name'];\n}\nexport { getAccountInfo, getSequences };","map":{"version":3,"names":["axios","Cookies","useRouter","useRoute","router","route","getAccountInfo","get","console","log","response","post","session_cookie","catch","error","alert","data","getSequences"],"sources":["/home/sirat/Code/vuempaproject/src/scripts/AccountFunc.js"],"sourcesContent":["/* eslint-disable*/\nimport axios from 'axios'\nimport Cookies from 'js-cookie'\nimport {useRouter, useRoute} from 'vue-router'\n\nconst router = useRouter()\nconst route = useRoute()\n\nasync function getAccountInfo() {\n    if (Cookies.get('session_cookie') == null) {\n        console.log(\"No account found\")\n        return \"No account found\"\n    }\n    let response = await axios.post(\"http://localhost:7000/api/getAccountInfo\", {session_cookie: Cookies.get('session_cookie')}).catch(error => {\n        console.error('Error getting info :', error);\n        alert(\"Backend server unavailable\")\n\n    });\n    return response.data['name']\n}\n\nasync function getSequences() {\n    if (Cookies.get('session_cookie') == null) {\n        console.log(\"No account found\")\n        return \"No account found\"\n    }\n    let response = await axios.post(\"http://localhost:7000/api/getSequences\", {session_cookie: Cookies.get('session_cookie')}).catch(error => {\n        console.error('Error getting info :', error);\n        alert(\"Backend server unavailable\")\n        return ''\n    });\n    return response.data['name']\n}\n\nexport {\n    getAccountInfo,\n    getSequences\n}\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,WAAW;AAC/B,SAAQC,SAAS,EAAEC,QAAQ,QAAO,YAAY;AAE9C,MAAMC,MAAM,GAAGF,SAAS,CAAC,CAAC;AAC1B,MAAMG,KAAK,GAAGF,QAAQ,CAAC,CAAC;AAExB,eAAeG,cAAcA,CAAA,EAAG;EAC5B,IAAIL,OAAO,CAACM,GAAG,CAAC,gBAAgB,CAAC,IAAI,IAAI,EAAE;IACvCC,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;IAC/B,OAAO,kBAAkB;EAC7B;EACA,IAAIC,QAAQ,GAAG,MAAMV,KAAK,CAACW,IAAI,CAAC,0CAA0C,EAAE;IAACC,cAAc,EAAEX,OAAO,CAACM,GAAG,CAAC,gBAAgB;EAAC,CAAC,CAAC,CAACM,KAAK,CAACC,KAAK,IAAI;IACxIN,OAAO,CAACM,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC5CC,KAAK,CAAC,4BAA4B,CAAC;EAEvC,CAAC,CAAC;EACF,OAAOL,QAAQ,CAACM,IAAI,CAAC,MAAM,CAAC;AAChC;AAEA,eAAeC,YAAYA,CAAA,EAAG;EAC1B,IAAIhB,OAAO,CAACM,GAAG,CAAC,gBAAgB,CAAC,IAAI,IAAI,EAAE;IACvCC,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;IAC/B,OAAO,kBAAkB;EAC7B;EACA,IAAIC,QAAQ,GAAG,MAAMV,KAAK,CAACW,IAAI,CAAC,wCAAwC,EAAE;IAACC,cAAc,EAAEX,OAAO,CAACM,GAAG,CAAC,gBAAgB;EAAC,CAAC,CAAC,CAACM,KAAK,CAACC,KAAK,IAAI;IACtIN,OAAO,CAACM,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC5CC,KAAK,CAAC,4BAA4B,CAAC;IACnC,OAAO,EAAE;EACb,CAAC,CAAC;EACF,OAAOL,QAAQ,CAACM,IAAI,CAAC,MAAM,CAAC;AAChC;AAEA,SACIV,cAAc,EACdW,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}